<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAYAEBAQAAAAAAAoAQAAZgAAABAQAAABAAgAaAUAAI4BAAAYGBAAAAAAAOgBAAD2BgAAGBgAAAEA
        CADIBgAA3ggAACAgEAAAAAAA6AIAAKYPAAAgIAAAAQAIAKgIAACOEgAAKAAAABAAAAAgAAAAAQAEAAAA
        AADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA
        /wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAREAAAAAAAARERAABERESBmREAAI////H5kQAI
        j4zDtxmQj4ePjMO5f4CIj4+Mw7mfQI+Hj4zDv/9AiI+Pj/M//0CPh4//////QIiPiIiIiIiAj4f39/eA
        AACBEREREQAAAI8fHx8fAAAAiIiIiIiAAAAAAAAAAAAAAP/xAAD/4AAA8AAAAPAAAAAAAQAAAAEAAAAB
        AAAAAQAAAAEAAAABAAAAAQAAAB8AAAAfAAAAHwAAAB8AAP//AAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgAD///8AMzOZACQkJQCZmZkA/7OAAO7u7gDs7OwA6OjoAP7S
        tACSkpIA7ZVkAP77+AD99e8A+u/jAJkzAACFhoYAAJnMAP338gD78ecA+OrbAPtvFAAAZpkA/PPrAPns
        3wD45dMAzGYzAAAA/wD238oAmZnMAPrt4QDDh2kAgID7ABMTygAODdgAORN1AAAAmgD++/kAXFPcAMzM
        /wAAAOcAAADEAAAAoAAJA8wAAADZAAAAuwAAALwAAACmAAAAjQAAAJsAAACAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsyMQAAAAAAAAAAAAAAAC8qLjAxAAAAABAQ
        EBAQECAsKS0uJQAAAAAMAgImDg8YJygpKisEBAQLDAIRFhsSFyEiIyQAAQIFCgwCERYbEhccHh8gAAEF
        BQkMAhEWGxIXHBwdEAABAgUGDAIRFhYSFxgZGhAAAQUFCAwCEQICEhITFBUQAAECBQYMAgICAgICDQ4P
        EAABBQUHDAwMDAwMDAwMDAwAAQIFBgcGCAYJCgsAAAAAAAEDAwMDAwMDAwMEAAAAAAABAgMCAwIDAgMC
        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
        mZmZkRAAAAAAj////////5mZmZkQAAAAAI/4iIiIiIeZmZmZEAAAAACP+PzMQ7s/mf+ZmZEAAAAAj/j8
        zEO7N4n/mZkYAAAAB4/4/MxDuzl5mZmZkAAIj/eP+PzMQ7s5l4mZmAAACIiHj/j8zEO7OZl//3AAAAh3
        f4/4/MxDuzmZH/9AAAAIiIeP+PzMQ7s5mZ//QAAACI/3j/j8zEO7P////0AAAAiIh4/4/MzDuz////9A
        AAAId3+P+P//87s/////QAAACIiHj/j///MzP////0AAAAiP94////////////9AAAAIiIeP////////
        ////QAAACHd/iIiIiIiIiIiIiIAAAAiIh//////////4AAAAAAAIj/h/zPf8z3/M8AAAAAAACIiIf//3
        //9///AAAAAAAAh3d3d3d3d3d3dwAAAAAAAIERFxERcREXEREAAAAAAACB/xcf8XH/Fx/xAAAAAAAAgR
        EXERFxERcREQAAAAAAAIiIiIiIiIiIiIiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//////////////A////gH///wA/wAAAP8AAAD/AAAA/wAAAP8AAADgAAAB4AAAA+AAAAfgAAAH4AA
        AB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/4AA
        A////////////ygAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAH5+
        fgB9fX0Ae3t8AHl5eQB3d3cAdXV0AHJycgBvb28AbW1tAGpqagBoZ2cAZGRkAGFhYQBeXV4AW1pbAFhX
        VwBUVFQAUVFQADMzmQDc3NwA1dXVAE1NTQD///8A0tLSAP77+AD9+vYASklKANvb2gDPz9AARkZGANnZ
        2QDX19cAz9DQAM3NzQDKy8sAx8jHAMTExADBwcEAQ0NDAHt7ewCZmZkA//79AP79/AD+/PkA/fjzAP33
        8QD89e4A/PPrAEBAQAD/ZgAA/vn2AMfHxwD99vIA+/HpAD08PQDu7u4A///+AOnp6QD//fsA//v6AOLi
        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
        ////////
</value>
  </data>
</root>